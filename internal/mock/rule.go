// Code generated by MockGen. DO NOT EDIT.
// Source: rule.go

// Package mock is a generated GoMock package.
package mock

import (
	"net/url"
	"reflect"

	"github.com/golang/mock/gomock"
)

// MockRule is a mock of Rule interface
type MockRule struct {
	ctrl     *gomock.Controller
	recorder *MockRuleMockRecorder
}

// MockRuleMockRecorder is the mock recorder for MockRule
type MockRuleMockRecorder struct {
	mock *MockRule
}

// NewMockRule creates a new mock instance
func NewMockRule(ctrl *gomock.Controller) *MockRule {
	mock := &MockRule{ctrl: ctrl}
	mock.recorder = &MockRuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRule) EXPECT() *MockRuleMockRecorder {
	return m.recorder
}

// Match mocks base method
func (m *MockRule) Match(u *url.URL) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Match", u)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Match indicates an expected call of Match
func (mr *MockRuleMockRecorder) Match(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Match", reflect.TypeOf((*MockRule)(nil).Match), u)
}
